"Definiciones de los tipos de raíz"
type Query {
  "Lista de usuarios registrados en la base de datos(Clientes / Admins)"
  users: ResultUsers
  "Para iniciar sesion de usuario"
  login(email: String!, password: String!): ResultLogin
  "Autenticarnos mediante token"
  me: ResultUser
}

type Mutation {
  register(user: UserInput!): ResultUser
}

"Interface especificar las propiedades obligatorias en las respuestas"
interface Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
}

type ResultUsers implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Lista de usuarios registrados en la base de datos(Clientes / Admins)"
  users: [User!]!
}

type ResultUser implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Información del usuario"
  user: User
}

type ResultLogin implements Result {
  "Estado de la operación"
  status: Boolean!
  "Mensaje de la operación para dar feedback"
  message: String!
  "Informacion del toekn del usuario que se ha logeado"
  token: String
}

"""
Vamos a especificar la información detallada por el usuario
*  Vamos a tener en cuenta:
email = usuario del cliente de la base de datos.
Fecha de nacimiento y registro en Formato ISO
"""
type User {
  "Identificador unico"
  id: ID!
  "Nombre de pila"
  name: String!
  "Apellidos"
  lastname: String!
  "email asociado a una cuenta usuario"
  email: String!
  "contraseña asociado a una cuenta usuario"
  password: String!
  "Fecha de registro"
  registerDate: String!
  "Fecha de nacimiento - Registro invalido para menores de edad"
  birthday: String!
  "Permisos del usuario"
  role: Role!
}

"input para añadir los datos del usuario en el registro"
input UserInput {
  "Identificador en este caso no obligatorio"
  id: ID
  "Nombre de pila"
  name: String!
  "Apellidos"
  lastname: String!
  "email asociado a una cuenta usuario"
  email: String!
  "contraseña asociado a una cuenta usuario"
  password: String!
  "Fecha de nacimiento - Registro invalido para menores de edad"
  birthday: String!
  "Permisos del usuario"
  role: Role = CLIENT
}

enum Role {
  CLIENT
  ADMIN
}
